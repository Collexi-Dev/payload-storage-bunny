{"version":3,"sources":["../src/staticHandler.ts"],"sourcesContent":["import type { StaticHandler } from '@payloadcms/plugin-cloud-storage/types'\nimport type { CollectionConfig } from 'payload'\n\nimport ky, { HTTPError } from 'ky'\nimport { posix } from 'node:path'\n\nimport type { BunnyAdapterOptions } from './types.js'\n\nimport { getStorageUrl, getVideoId } from './utils.js'\n\ntype Args = { collection: CollectionConfig; prefix?: string } & BunnyAdapterOptions\n\nexport const getStaticHandler = ({\n  collection,\n  prefix = '',\n  storage,\n  stream,\n}: Args): StaticHandler => {\n  return async (req, { doc, params: { filename } }) => {\n    try {\n      let videoId = getVideoId(doc, filename)\n\n      if (!videoId) {\n        const doc = (await req.payload.find({\n          collection: collection.slug,\n          limit: 1,\n          where: {\n            bunnyVideoId: {\n              exists: true,\n            },\n            filename: {\n              equals: filename,\n            },\n          },\n        })) as unknown as { docs: { bunnyVideoId: string }[] }\n\n        if (doc.docs.length === 0) {\n          return new Response('Not Found', { status: 404 })\n        }\n\n        videoId = doc.docs[0].bunnyVideoId\n      }\n\n      if (stream && videoId) {\n        if (!stream.mp4FallbackQuality) {\n          return new Response('MP4 fallback quality not configured', { status: 400 })\n        }\n\n        const mp4Url = `https://${stream.hostname}/${videoId}/play_${stream.mp4FallbackQuality}.mp4`\n        req.payload.logger.info(mp4Url)\n        const response = await ky.get(mp4Url)\n\n        if (!response.ok) {\n          return new Response(null, { status: 404, statusText: 'Not Found' })\n        }\n\n        return new Response(response.body, {\n          headers: new Headers({\n            'content-length': response.headers.get('Content-Length') || '',\n            'content-type': 'video/mp4',\n          }),\n          status: 200,\n        })\n      }\n\n      const response = await ky.get(\n        `https://${getStorageUrl(storage.region)}/${storage.zoneName}/${posix.join(prefix, filename)}`,\n        {\n          headers: {\n            AccessKey: storage.apiKey,\n          },\n        },\n      )\n\n      if (!response.ok) {\n        return new Response(null, { status: 404, statusText: 'Not Found' })\n      }\n\n      const etagFromHeaders = req.headers.get('etag') || req.headers.get('if-none-match')\n      const objectEtag = response.headers.get('etag') as string\n\n      if (etagFromHeaders && etagFromHeaders === objectEtag) {\n        return new Response(null, {\n          headers: new Headers({\n            'content-length': response.headers.get('Content-Length') || '',\n            'content-type': response.headers.get('Content-Type') || '',\n            ETag: objectEtag,\n          }),\n          status: 304,\n        })\n      }\n\n      return new Response(response.body, {\n        headers: new Headers({\n          'content-length': response.headers.get('Content-Length') || '',\n          'content-type': response.headers.get('Content-Type') || '',\n          ETag: objectEtag,\n        }),\n        status: 200,\n      })\n    } catch (err) {\n      if (err instanceof HTTPError) {\n        const errorResponse = await err.response.text()\n\n        req.payload.logger.error({\n          error: {\n            response: errorResponse,\n            status: err.response.status,\n            statusText: err.response.statusText,\n          },\n          file: { name: filename },\n          storage: storage.zoneName,\n        })\n\n        return new Response(null, {\n          status: err.response.status === 404 ? 404 : 500,\n          statusText: err.response.status === 404 ? 'Not Found' : 'Internal Server Error',\n        })\n      }\n\n      req.payload.logger.error({\n        error: err,\n        file: { name: filename },\n        storage: storage.zoneName,\n      })\n\n      return new Response('Internal Server Error', { status: 500 })\n    }\n  }\n}\n"],"names":["ky","HTTPError","posix","getStorageUrl","getVideoId","getStaticHandler","collection","prefix","storage","stream","req","doc","params","filename","videoId","payload","find","slug","limit","where","bunnyVideoId","exists","equals","docs","length","Response","status","mp4FallbackQuality","mp4Url","hostname","logger","info","response","get","ok","statusText","body","headers","Headers","region","zoneName","join","AccessKey","apiKey","etagFromHeaders","objectEtag","ETag","err","errorResponse","text","error","file","name"],"mappings":"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"}