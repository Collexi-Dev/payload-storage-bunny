{"version":3,"sources":["../src/handleDelete.ts"],"sourcesContent":["import type { HandleDelete } from '@payloadcms/plugin-cloud-storage/types'\n\nimport ky, { HTTPError } from 'ky'\nimport { posix } from 'node:path'\nimport { APIError } from 'payload'\n\nimport type { BunnyAdapterOptions } from './types.js'\n\nimport { getStorageUrl, getVideoId } from './utils.js'\n\nexport const getHandleDelete = ({ storage, stream }: BunnyAdapterOptions): HandleDelete => {\n  return async ({ doc, filename, req }) => {\n    try {\n      const videoId = getVideoId(doc, filename)\n\n      if (stream && videoId) {\n        await ky.delete(\n          `https://video.bunnycdn.com/library/${stream.libraryId}/videos/${videoId}`,\n          {\n            headers: {\n              accept: 'application/json',\n              AccessKey: stream.apiKey,\n            },\n            timeout: 120000,\n          },\n        )\n      } else {\n        const filePath = posix.join(doc.prefix || '', filename)\n\n        await ky.delete(\n          `https://${getStorageUrl(storage.region)}/${storage.zoneName}/${filePath}`,\n          {\n            headers: {\n              accept: 'application/json',\n              AccessKey: storage.apiKey,\n            },\n            timeout: 120000,\n          },\n        )\n      }\n    } catch (err) {\n      if (err instanceof HTTPError) {\n        const errorResponse = await err.response.text()\n\n        req.payload.logger.error({\n          error: {\n            response: errorResponse,\n            status: err.response.status,\n            statusText: err.response.statusText,\n          },\n          file: { name: filename },\n          storage: storage.zoneName,\n        })\n      }\n\n      req.payload.logger.error({\n        error: err,\n        file: { name: filename },\n        storage: storage.zoneName,\n      })\n\n      throw new APIError(`Error deleting file: ${filename}`, 500)\n    }\n  }\n}\n"],"names":["ky","HTTPError","posix","APIError","getStorageUrl","getVideoId","getHandleDelete","storage","stream","doc","filename","req","videoId","delete","libraryId","headers","accept","AccessKey","apiKey","timeout","filePath","join","prefix","region","zoneName","err","errorResponse","response","text","payload","logger","error","status","statusText","file","name"],"mappings":"AAEA,OAAOA,MAAMC,SAAS,QAAQ,KAAI;AAClC,SAASC,KAAK,QAAQ,YAAW;AACjC,SAASC,QAAQ,QAAQ,UAAS;AAIlC,SAASC,aAAa,EAAEC,UAAU,QAAQ,aAAY;AAEtD,OAAO,MAAMC,kBAAkB,CAAC,EAAEC,OAAO,EAAEC,MAAM,EAAuB;IACtE,OAAO,OAAO,EAAEC,GAAG,EAAEC,QAAQ,EAAEC,GAAG,EAAE;QAClC,IAAI;YACF,MAAMC,UAAUP,WAAWI,KAAKC;YAEhC,IAAIF,UAAUI,SAAS;gBACrB,MAAMZ,GAAGa,MAAM,CACb,CAAC,mCAAmC,EAAEL,OAAOM,SAAS,CAAC,QAAQ,EAAEF,SAAS,EAC1E;oBACEG,SAAS;wBACPC,QAAQ;wBACRC,WAAWT,OAAOU,MAAM;oBAC1B;oBACAC,SAAS;gBACX;YAEJ,OAAO;gBACL,MAAMC,WAAWlB,MAAMmB,IAAI,CAACZ,IAAIa,MAAM,IAAI,IAAIZ;gBAE9C,MAAMV,GAAGa,MAAM,CACb,CAAC,QAAQ,EAAET,cAAcG,QAAQgB,MAAM,EAAE,CAAC,EAAEhB,QAAQiB,QAAQ,CAAC,CAAC,EAAEJ,UAAU,EAC1E;oBACEL,SAAS;wBACPC,QAAQ;wBACRC,WAAWV,QAAQW,MAAM;oBAC3B;oBACAC,SAAS;gBACX;YAEJ;QACF,EAAE,OAAOM,KAAK;YACZ,IAAIA,eAAexB,WAAW;gBAC5B,MAAMyB,gBAAgB,MAAMD,IAAIE,QAAQ,CAACC,IAAI;gBAE7CjB,IAAIkB,OAAO,CAACC,MAAM,CAACC,KAAK,CAAC;oBACvBA,OAAO;wBACLJ,UAAUD;wBACVM,QAAQP,IAAIE,QAAQ,CAACK,MAAM;wBAC3BC,YAAYR,IAAIE,QAAQ,CAACM,UAAU;oBACrC;oBACAC,MAAM;wBAAEC,MAAMzB;oBAAS;oBACvBH,SAASA,QAAQiB,QAAQ;gBAC3B;YACF;YAEAb,IAAIkB,OAAO,CAACC,MAAM,CAACC,KAAK,CAAC;gBACvBA,OAAON;gBACPS,MAAM;oBAAEC,MAAMzB;gBAAS;gBACvBH,SAASA,QAAQiB,QAAQ;YAC3B;YAEA,MAAM,IAAIrB,SAAS,CAAC,qBAAqB,EAAEO,UAAU,EAAE;QACzD;IACF;AACF,EAAC"}